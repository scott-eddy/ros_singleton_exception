// Generated by gencpp from file test/Empty.msg
// DO NOT EDIT!


#ifndef TEST_MESSAGE_EMPTY_H
#define TEST_MESSAGE_EMPTY_H

#include <ros/service_traits.h>


#include <test/EmptyRequest.h>
#include <test/EmptyResponse.h>


namespace test
{

struct Empty
{

typedef EmptyRequest Request;
typedef EmptyResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Empty
} // namespace test


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::test::Empty > {
  static const char* value()
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const ::test::Empty&) { return value(); }
};

template<>
struct DataType< ::test::Empty > {
  static const char* value()
  {
    return "test/Empty";
  }

  static const char* value(const ::test::Empty&) { return value(); }
};


// service_traits::MD5Sum< ::test::EmptyRequest> should match 
// service_traits::MD5Sum< ::test::Empty > 
template<>
struct MD5Sum< ::test::EmptyRequest>
{
  static const char* value()
  {
    return MD5Sum< ::test::Empty >::value();
  }
  static const char* value(const ::test::EmptyRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::test::EmptyRequest> should match 
// service_traits::DataType< ::test::Empty > 
template<>
struct DataType< ::test::EmptyRequest>
{
  static const char* value()
  {
    return DataType< ::test::Empty >::value();
  }
  static const char* value(const ::test::EmptyRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::test::EmptyResponse> should match 
// service_traits::MD5Sum< ::test::Empty > 
template<>
struct MD5Sum< ::test::EmptyResponse>
{
  static const char* value()
  {
    return MD5Sum< ::test::Empty >::value();
  }
  static const char* value(const ::test::EmptyResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::test::EmptyResponse> should match 
// service_traits::DataType< ::test::Empty > 
template<>
struct DataType< ::test::EmptyResponse>
{
  static const char* value()
  {
    return DataType< ::test::Empty >::value();
  }
  static const char* value(const ::test::EmptyResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TEST_MESSAGE_EMPTY_H
